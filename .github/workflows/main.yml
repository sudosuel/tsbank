name: Release Pipeline

on:
  pull_request_target:
    types:
      closed
    branches:
      - main

defaults:
 run:
  working-directory: ./backend

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.7

    - name: Setup Node.js environment
      uses: actions/setup-node@v4.0.3
      with:
        node-version: '20.x'

    # - name: Install dependencies
    #   run: npm ci

    # - name: Run static code analysis
    #   run: npm run lint

    # - name: Run unit tests
    #   run: npm run test

    # - name: Build the project
    #   run: npm run build --if-present

    # - name: Create Docker image
    #   run: |
    #     LATEST_TAG=$(curl -s "https://api.github.com/repos/sudosuel/tsbank/tags" | jq -r '.[0].name')
        
    #     prefix=$(echo "$LATEST_TAG" | cut -d'-' -f1)
    #     major=$(echo "$LATEST_TAG" | cut -d'-' -f2 | cut -d'.' -f1)
    #     minor=$(echo "$LATEST_TAG" | cut -d'-' -f2 | cut -d'.' -f2)
        
    #     minor=$((minor + 1))
        
    #     if [ "$minor" -eq 10 ]; then
    #       minor=0
    #       major=$((major + 1))
    #     fi
        
    #     NEW_TAG="$prefix-$major.$minor"
        
    #     echo "New tag: $NEW_TAG"
        
    #     docker build -t lexmarcos/tsbank:$NEW_TAG .
    #     docker tag lexmarcos/tsbank:$NEW_TAG lexmarcos/tsbank:latest

    # - name: Login to Docker Hub
    #   uses: docker/login-action@v3.2.0
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Push Docker image
    #   run: |
    #     LATEST_TAG=$(curl -s "https://api.github.com/repos/sudosuel/tsbank/tags" | jq -r '.[0].name')
        
    #     prefix=$(echo "$LATEST_TAG" | cut -d'-' -f1)
    #     major=$(echo "$LATEST_TAG" | cut -d'-' -f2 | cut -d'.' -f1)
    #     minor=$(echo "$LATEST_TAG" | cut -d'-' -f2 | cut -d'.' -f2)
        
    #     minor=$((minor + 1))
        
    #     if [ "$minor" -eq 10 ]; then
    #       minor=0
    #       major=$((major + 1))
    #     fi
        
    #     NEW_TAG="$prefix-$major.$minor"
        
    #     echo "New tag: $NEW_TAG"
        
    #     docker push lexmarcos/tsbank:$NEW_TAG
    #     docker push lexmarcos/tsbank:latest

    # - name: Remove node_modules folder
    #   run: rm -rf node_modules

    # - name: Upload release package
    #   uses: actions/upload-artifact@v4.3.4
    #   with:
    #     name: ${{ github.ref_name }}
    #     path: |
    #       ./release
    #       !./.git/
    
  tag:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.7
      env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Create release tag
      run: |
        LATEST_TAG=$(curl -s "https://api.github.com/repos/sudosuel/tsbank/tags" | jq -r '.[0].name')
        
        prefix=$(echo "$LATEST_TAG" | cut -d'-' -f1)
        major=$(echo "$LATEST_TAG" | cut -d'-' -f2 | cut -d'.' -f1)
        minor=$(echo "$LATEST_TAG" | cut -d'-' -f2 | cut -d'.' -f2)
        
        minor=$((minor + 1))
        
        if [ "$minor" -eq 10 ]; then
          minor=0
          major=$((major + 1))
        fi
        
        NEW_TAG="$prefix-$major.$minor"
        
        echo "New tag: $NEW_TAG"
        
        git tag -a $NEW_TAG -m "Release $NEW_TAG"
        git push origin tag $NEW_TAG
